{"version":3,"file":"commons.js","mappings":"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","sources":["webpack://surveyor/./src/filter.js","webpack://surveyor/./src/pairs.js","webpack://surveyor/./tests/filter-test.js","webpack://surveyor/./tests/hashing-test.js","webpack://surveyor/./tests/pairs-test.js","webpack://surveyor/./node_modules/string-hash/index.js","webpack://surveyor/./data/choices.yml"],"sourcesContent":["function within (pair, list) {\n  return pair.filter(i => list.indexOf(i) > -1).length < 2\n}\n\nexport default function (list, unallowed) {\n  return list.filter(i => within(i, unallowed))\n}\n","export default function pairs ([ a, ...tail]) {\n  return tail.length ? tail.map(b => [ a, b ]).concat(pairs(tail)) : []\n}\n","import filter from 'filter'\n\ndescribe('Filter', function() {\n\n  it ('constructs a list of all unique pairs', function() {\n    let pairs = [ [1,2], [1,3], [1,4], [2,3], [2,4], [3,4] ]\n    let unique = [ 2, 3, 4 ]\n\n    filter(pairs, unique).should.eql([ [1,2], [1,3], [1,4] ])\n  })\n\n})\n","import choices from '../data/choices'\nimport hash from 'string-hash'\n\ndescribe('generating ids with string hashing', function() {\n\n  it ('does not contain any duplicate ids', function() {\n    var ids = choices.map(hash)\n\n    ids.forEach(function(code) {\n      ids.filter(id => id === code).length.should.equal(1)\n    })\n  })\n\n  it ('produces consistent hash codes', function() {\n    var existing = []\n\n    choices.forEach(function(code) {\n      var expected = hash(code)\n\n      for (var i = 0; i < 1000; i++) {\n        hash(code).should.equal(expected)\n      }\n\n      existing.indexOf(expected).should.equal(-1)\n      existing.push(expected)\n    })\n  })\n\n})\n","import pairs from 'pairs'\n\ndescribe('pairs', function() {\n\n  it ('constructs a list of all unique pairs', function() {\n    pairs([ 1, 2, 3 ]).should.eql([ [1,2], [1,3], [2,3]])\n  })\n\n  it ('gets the right number of items', function() {\n    let items = [ 1, 2, 3, 4, 5 ]\n\n    // http://en.wikipedia.org/wiki/Network_science#Network_properties\n    let ties = (items.length * (items.length - 1)) / 2\n\n    pairs(items).length.should.equal(ties)\n  })\n\n})\n","\"use strict\";\n\nfunction hash(str) {\n  var hash = 5381,\n      i    = str.length;\n\n  while(i) {\n    hash = (hash * 33) ^ str.charCodeAt(--i);\n  }\n\n  /* JavaScript does bitwise operations (like XOR, above) on 32-bit signed\n   * integers. Since we want the results to be always positive, convert the\n   * signed int to an unsigned by doing an unsigned bitshift. */\n  return hash >>> 0;\n}\n\nmodule.exports = hash;\n","export default ['Being Lazy\\r- Wasting Money\\r- Being Dishonest\\r- Becoming a Teen Parent\\r- Committing Crime\\r- Dropping out of School\\r- Being Chronically Unemployed\\r- Abusing Drugs/Alcohol\\r- Lacking Role Models\\r- Having a Bad Upbringing\\r- Working for Low Wages\\r- Attending Bad Schools\\r- Having Parents on Welfare\\r- Living in a Bad Neighborhood\\r- Lacking Social Connections\\r- Lacking Job Opportunities\\r- Experiencing Discrimination\\r- Starting From an Unlevel Playingfield\\r- Exploitation by Employers\\r- Experiencing Job Outsourcing\\r- Experiencing Declining Wages\\r- Lack of Government Safety Nets\\r- Experiencing Racism\\r- Experiencing Sexism\\r- Being an Immigrant\\r- Being Disabled\\r- Being a Welfare Recipient\\r- Being Poor\\r- Being White\\r- Being a Racial Minority\\r- Being Female\\r- Being Male\\r'];"],"names":["within","pair","list","filter","i","indexOf","length","unallowed","pairs","_ref","_ref2","_toArray","a","tail","slice","map","b","concat","describe","it","unique","should","eql","choices","hash","ids","forEach","code","id","equal","existing","expected","push","items","ties"],"sourceRoot":""}